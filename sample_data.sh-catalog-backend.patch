From f54adddc5c65a765981dec092bfa4545abea5ebd Mon Sep 17 00:00:00 2001
From: Alan Pevec <apevec@redhat.com>
Date: Wed, 7 Mar 2012 21:31:37 +0100
Subject: [PATCH] create service endpoints in sample data

Enable creation of endpoints by setting ENABLE_ENDPOINTS environment
variable. Works with Catalog SQL backend.

Change-Id: I9ba0ea1b3cf35720fb338e91f48fcbddc326971b

diff --git a/keystone/catalog/backends/sql.py b/keystone/catalog/backends/sql.py
index a3a46cd..a5964d7 100644
--- a/keystone/catalog/backends/sql.py
+++ b/keystone/catalog/backends/sql.py
@@ -19,11 +19,13 @@ import sqlalchemy.exc
 import webob.exc
 
 from keystone import catalog
+from keystone import config
 from keystone import exception
 from keystone.common import sql
 from keystone.common.sql import migration
 
 
+CONF = config.CONF
 class Service(sql.ModelBase, sql.DictBase):
     __tablename__ = 'service'
     id = sql.Column(sql.String(64), primary_key=True)
@@ -140,7 +142,9 @@ class Catalog(sql.Base):
         return [e['id'] for e in list(endpoints)]
 
     def get_catalog(self, user_id, tenant_id, metadata=None):
-        d = {'tenant_id': tenant_id, 'user_id': user_id}
+        d = dict(CONF.iteritems())
+        d.update({'tenant_id': tenant_id,
+                  'user_id': user_id})
         catalog = {}
 
         endpoints = [self.get_endpoint(e)
